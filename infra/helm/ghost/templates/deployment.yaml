apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ghost.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "ghost.name" . }}
    helm.sh/chart: {{ include "ghost.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ghost.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ghost.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: nginx
          image: nginx:1.16
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/ghost.template
              name: nginx-conf
              subPath: ghost.template
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
        - name: ghost
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ghost
              containerPort: 2368
              protocol: TCP
          env:
            - name: url
              value: {{ .Values.ghost.protocol }}://{{ .Values.ghost.host }}
          volumeMounts:
            - mountPath: /var/lib/ghost/content
              name: ghost-content
          livenessProbe:
            httpGet:
              path: /
              port: ghost
              httpHeaders:
              - name: Host
                value: {{ .Values.ghost.host | quote }}
              {{- if eq .Values.ghost.protocol "https" }}
              - name: X-Forwarded-Proto
                value: https
              {{- end }}
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: ghost
              httpHeaders:
              - name: Host
                value: {{ .Values.ghost.host | quote }}
              {{- if eq .Values.ghost.protocol "https" }}
              - name: X-Forwarded-Proto
                value: https
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: ghost-content
          persistentVolumeClaim:
            claimName: ghost-content
        - name: nginx-conf
          configMap:
            name: ghost-nginx-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
